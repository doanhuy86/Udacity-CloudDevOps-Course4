export DB_PASSWORD=mypassword
PGPASSWORD="$DB_PASSWORD" psql --host 127.0.0.1 -U myuser -d mydatabase -p 5433 < 2_seed_users.sql


export POSTGRES_PASSWORD=$(kubectl get secret --namespace default postgresql-service -o jsonpath="{.data.postgres-password}" | base64 -d)

export DB_USERNAME=myuser
export DB_PASSWORD=mypassword
export DB_HOST=127.0.0.1
export DB_PORT=5433
export DB_NAME=mydatabase

curl 127.0.0.1:5153/api/reports/daily_usage

curl 127.0.0.1:5153/api/reports/user_visits

aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.us-east-1.amazonaws.com

aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin aws_account_id.dkr.ecr.region.amazonaws.com

aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 140570531199.dkr.ecr.us-east-1.amazonaws.com

docker tag test-coworking-analytics:latest 140570531199.dkr.ecr.us-east-1.amazonaws.com/coworking:latest

docker push 140570531199.dkr.ecr.us-east-1.amazonaws.com/coworking:latest

export POSTGRES_PASSWORD=$(kubectl get secret --namespace default mydatabase-secrets -o jsonpath="{.data.postgres-password}" | base64 -d)

kubectl apply -f configmap.yml 
kubectl apply -f secrets.yml
kubectl apply -f coworking.yml

aws iam attach-role-policy --role-name eksctl-my-cluster-nodegroup-my-nod-NodeInstanceRole-U9t78mW4omaN --policy-arn arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy

aws eks create-addon --addon-name amazon-cloudwatch-observability --cluster-name my-cluster

